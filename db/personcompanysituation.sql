CREATE OR REPLACE FUNCTION PROCESS_DEBTOR_COMPANY_LOG() RETURNS TRIGGER AS $DEBTOR_COMPANY_LOG$
    BEGIN
        --
        -- Create a row in emp_audit to reflect the operation performed on emp,
        -- make use of the special variable TG_OP to work out the operation.
        --
        IF (TG_OP = 'UPDATE') THEN
            INSERT INTO LOG_DEBTOR_COMPANY_SITUATION(COMPANY_ID,DEBTOR_ID,STATUS,LOG_DATE) VALUES(NEW.COMPANY_ID,NEW.DEBTOR_ID,NEW.STATUS,now());
            RETURN NEW;
        ELSIF (TG_OP = 'INSERT') THEN
           INSERT INTO LOG_DEBTOR_COMPANY_SITUATION(COMPANY_ID,DEBTOR_ID,STATUS,LOG_DATE) VALUES(NEW.COMPANY_ID,NEW.DEBTOR_ID,NEW.STATUS,now());
           RETURN NEW;
        END IF;
        RETURN NULL; -- result is ignored since this is an AFTER trigger
    END;
$DEBTOR_COMPANY_LOG$ LANGUAGE plpgsql;

CREATE TRIGGER DEBTOR_COMPANY_LOG
AFTER INSERT OR UPDATE ON DEBTOR_COMPANY_SITUATION
    FOR EACH ROW EXECUTE PROCEDURE PROCESS_DEBTOR_COMPANY_LOG();